// Generated by CoffeeScript 1.6.3
(function() {
  var moment, _;

  _ = require("underscore");

  moment = require("moment");

  Date.prototype.addDays = function(days) {
    var dat;
    dat = new Date(this.valueOf());
    dat.setDate(dat.getDate() + days);
    return dat;
  };

  exports.getDates = function(startDate, stopDate, callback) {
    var currentDate, dateArray;
    dateArray = new Array();
    currentDate = startDate;
    while (currentDate <= stopDate) {
      dateArray.push(currentDate);
      currentDate = currentDate.addDays(1);
    }
    if (typeof callback === "function") {
      return callback(dateArray);
    }
    return dateArray;
  };

  exports.formatDate = function(dateArray) {
    var format, i;
    format = "";
    if (dateArray.length <= 7) {
      format = "dddd";
    }
    if (dateArray.length > 7 && dateArray.length <= 365) {
      format = "MMMM";
    }
    if (dateArray.length > 365) {
      format = "YYYY";
    }
    i = 0;
    while (i < dateArray.length) {
      dateArray[i] = moment(dateArray[i]).format(format);
      i++;
    }
    return _.uniq(dateArray);
  };

  exports.formatDateForView = function(dateArray) {
    var format;
    format = "";
    dateArray = [moment(dateArray[0]).startOf("day"), moment(dateArray[1]).startOf("day")];
    if (dateArray[0].format() !== dateArray[1].format()) {
      format = moment(dateArray[0]).calendar().split(" at")[0] + " to " + moment(dateArray[1]).calendar().split(" at")[0];
    }
    if (dateArray[0].format() === dateArray[1].format()) {
      if (moment(dateArray[0]).format("L") === moment(new Date()).format("L")) {
        format = "Today";
      } else {
        format = moment(dateArray[0]).fromNow();
      }
    }
    return format;
  };

  exports.getTweetValuesByLabels = function(tws, labels) {
    var days, format, grouped, i, key, months, obj, years;
    format = "";
    days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"];
    months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    years = ["2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020"];
    grouped = _(tws).groupBy("keyword");
    if ((_.intersection(days, labels)).length > 0) {
      format = "dddd";
    }
    if ((_.intersection(months, labels)).length > 0) {
      format = "MMMM";
    }
    if ((_.intersection(years, labels)).length > 0) {
      format = "YYYY";
    }
    i = 0;
    while (i < tws.length) {
      tws[i].dateformat = "";
      tws[i].dateformat = moment(tws[i].requested_at).format(format);
      i++;
    }
    for (key in grouped) {
      obj = grouped[key];
      grouped[key] = _(obj).countBy("dateformat");
    }
    for (key in grouped) {
      obj = grouped[key];
      i = 0;
      while (i < labels.length) {
        if (!obj.hasOwnProperty(labels[i])) {
          obj[labels[i]] = 0;
        }
        i++;
      }
    }
    for (key in grouped) {
      obj = grouped[key];
      grouped[key] = [];
      i = 0;
      while (i < labels.length) {
        if (obj.hasOwnProperty(labels[i])) {
          grouped[key].push(obj[labels[i]]);
        }
        i++;
      }
    }
    return grouped;
  };

}).call(this);
