// Generated by CoffeeScript 1.6.3
(function() {
  jQuery(function($) {
    var Charts, UI;
    UI = {
      maxDate: new Date(),
      setupElements: function() {
        $("#from").datepicker({
          dateFormat: "yy-mm-dd",
          defaultDate: "+1w",
          changeMonth: true,
          numberOfMonths: 1,
          maxDate: this.maxDate,
          onClose: function(selectedDate) {
            return $("#to").datepicker("option", "minDate", selectedDate);
          }
        });
        $("#to").datepicker({
          dateFormat: "yy-mm-dd",
          defaultDate: "+1w",
          changeMonth: true,
          numberOfMonths: 1,
          maxDate: this.maxDate,
          onClose: function(selectedDate) {
            return $("#from").datepicker("option", "maxDate", selectedDate);
          }
        });
        return $("#progressbar").progressbar({
          value: 37
        });
      },
      groupChart: function() {
        return $(".chart-types").bind("click", function() {
          var _this;
          _this = this;
          $(".chart-types").each(function() {
            return $(this).parent().removeClass("active");
          });
          return $(_this).parent().addClass("active");
        });
      },
      groupKeywords: function() {
        return $(".update-keyword").bind("click", function(e) {
          $(this).toggleClass("active");
          UI.showLoading();
          return UI.getData(e, "totals");
        });
      },
      getKeywords: function() {
        var keywords;
        keywords = [];
        $(".update-keyword.active").each(function() {
          return keywords.push($(this).data("keyword"));
        });
        return keywords;
      },
      getSince: function() {
        return $("#chart-since").val();
      },
      setSince: function(tweetId) {
        return $("#chart-since").val(tweetId);
      },
      getChart: function() {
        return $(document).delegate(".update-chart", "click", function(e) {
          UI.showLoading();
          return UI.getData(e, "totals");
        });
      },
      setDates: function() {
        return $(document).delegate("#submit-date-range", "click", function(e) {
          UI.showLoading();
          $(".close-reveal-modal").click();
          return UI.getData(e, "totals");
        });
      },
      getTweetsPaginate: function() {
        return $(document).delegate("a.pagination", "click", function(e) {
          UI.showLoading();
          return UI.getData(e, "tweets");
        });
      },
      showLoading: function() {
        var element, loading;
        loading = "<div data-alert class=\"alert-box\">Loading new data.<a href=\"#\" class=\"close\">&times;</a></div>";
        element = $("#footer-region");
        return element.prepend(loading);
      },
      removeLoading: function() {
        var loading;
        loading = $(".alert-box");
        return loading.each(function() {
          return $(this).find("a").click();
        });
      },
      getData: function(e, context) {
        var chart, dates, keywords, since;
        e.preventDefault();
        dates = $("#from").val() + "." + $("#to").val();
        if (dates.length > 1) {
          dates = "date=" + dates;
        }
        if (dates.length === 1) {
          dates = "date=";
        }
        chart = $(".chart-types").parent(".active").data("chart");
        chart = "&chart=" + chart;
        keywords = UI.getKeywords();
        keywords = "&keywords=" + keywords.join(";").replace(RegExp(" ", "g"), "_");
        since = UI.getSince();
        since = "&since=" + since;
        context = context;
        context = "&context=" + context;
        return Charts.getChartData(dates, chart, keywords, since, context, Charts.receivedChartData);
      }
    };
    Charts = {
      bindRemoveFormattedDatesCancelButton: function() {
        $("#cancel-remove-date-filter").bind("click", function() {
          return $(".close-reveal-modal").click();
        });
        return $("#remove-date-filter").bind("click", function() {
          return console.log("removed");
        });
      },
      removeFormattedDates: function() {
        return $(document).on("click", ".formatted-dates");
      },
      setupFirstChart: function() {
        var ctx;
        ctx = document.getElementById("myChart").getContext("2d");
        return new Chart(ctx).Pie(eval_("(" + document.getElementById("chart-data").value + ")"), {
          animation: true
        });
      },
      receivedChartData: function(dates, chart, keywords, data) {
        var displayedTweets, formattedDates, since;
        since = data.since;
        displayedTweets = data.displayedTweets;
        formattedDates = data.formattedDates;
        data = data.chartData;
        chart = chart.split("=")[1];
        if (typeof data !== "undefined") {
          console.log(since);
          Charts.replaceChart(dates, chart, keywords, data);
          Charts.replaceChartHeader(chart);
          Charts.replaceChartLegend(chart, data);
          Charts.replaceTotalTweets(chart, data);
          Charts.replaceDates(formattedDates);
          Charts.replaceTweets(displayedTweets);
          UI.setSince(since);
        }
        if (chart === "Bar" || chart === "Line" || chart === "Radar") {
          data = data.datasets;
        }
        if (typeof data === "undefined" || data.length === 0) {
          $("#myChart").html("<h2>No tweets found.</h2><h4 class='subheader'>Try adding keywords or searching a different time range.</h4>");
          $(".current-chart-legend").html("<h6 class=\"subheader\">No results found, try adding keywords or choosing a different date range.</h6>");
          $("#tweets-total").text("No tweets found");
          $(".tweets-list").html("<h6 class=\"subheader\">No results found, try adding keywords or choosing a different date range.</h6>");
        }
        return UI.removeLoading();
      },
      getChartData: function(dates, chart, keywords, since, context, callback) {
        return $.ajax("/tweets/chart/" + dates + chart + keywords + since + context + "/", {
          type: "GET",
          dataType: "json",
          success: function(data) {
            if (callback) {
              return callback(dates, chart, keywords, data);
            }
          },
          error: function() {
            if (callback) {
              return callback(null);
            }
          }
        });
      },
      replaceChart: function(dates, chart, keywords, data) {
        var ctx;
        ctx = document.getElementById("myChart").getContext("2d");
        return new Chart(ctx)[chart](data, {
          animation: true
        });
      },
      replaceChartLegend: function(chart, data) {
        var container, content;
        if (chart === "Bar" || chart === "Line" || chart === "Radar") {
          data = data.datasets;
        }
        container = $(".current-chart-legend");
        content = "";
        $(data).each(function(index, dataPoint) {
          return content = content + "<ul class='inline-list'><li class='chartBox', style='background-color:" + dataPoint.color + ";'></li>" + "<li>" + dataPoint.keyword + "</li><li>" + dataPoint.value + " tweets</li><li>" + dataPoint.percentage + "%</li></ul>";
        });
        return container.html(content);
      },
      replaceTotalTweets: function(chart, data) {
        var total;
        total = 0;
        if (chart === "Bar" || chart === "Line" || chart === "Radar") {
          data = data.datasets;
        }
        $.each(data, function(index, element) {
          return total = total + element.value;
        });
        return $("#tweets-total").text(" " + total + " Tweets");
      },
      replaceDates: function(formattedDates) {
        return $(".formatted-dates").each(function() {
          var $tmp;
          $tmp = $(this).children(":first").children().remove();
          return $(this).children(":first").text(formattedDates + "     ").append($tmp);
        });
      },
      addModalToDate: function() {
        return $(".active.formatted-dates").data("data-reveal-id", "remove-date-modal");
      },
      replaceChartHeader: function(chart) {
        var subtext;
        $("#chart-header").text(chart + " chart");
        subtext = "";
        if (chart === "Pie") {
          subtext = "Pie charts are great at comparing proportions within a single data set.";
        }
        if (chart === "Doughnut") {
          subtext = "Similar to pie charts, doughnut charts are great for showing proportional data.";
        }
        if (chart === "Bar") {
          subtext = "Bar graphs are great at showing trend data.";
        }
        if (chart === "Line") {
          subtext = "Line graphs are most widely used graph for showing trends.";
        }
        if (chart === "PolarArea") {
          subtext = "Polar area charts are similar to pie charts, but the variable isn't the circumference of the segment, but the radius of it.";
        }
        if (chart === "Radar") {
          subtext = "Radar charts are good for comparing a selection of different pieces of data.";
        }
        return $("#chart-subheader").text(subtext);
      },
      replaceTweets: function(displayedTweets) {
        var i, _results;
        $("ul.tweets-list").html("");
        i = 0;
        _results = [];
        while (i < displayedTweets.length) {
          $("ul.tweets-list").append("<li class=\"tweet\">" + "<div class=\"row\">" + "<div class=\"small-3 columns\">" + "<img src=\"" + displayedTweets[i].user.profile_image_url + "\">" + "</div>" + "<div class=\"small-8 columns\">" + "<h6>" + "<a class=\"user-name\" href=\"http://www.twitter.com/" + displayedTweets[i].user.screen_name + "\" target=\"_blank\">" + displayedTweets[i].user.name + "</a> said:" + "</h6>" + "<span class=\"text\">" + displayedTweets[i].text + "</span>" + "</div>" + "<hr>" + "</div>" + "</li>");
          _results.push(i += 1);
        }
        return _results;
      }
    };
    Charts.setupFirstChart();
    Charts.bindRemoveFormattedDatesCancelButton();
    UI.setupElements();
    UI.getChart();
    UI.setDates();
    UI.groupChart();
    return UI.groupKeywords();
  });

}).call(this);
