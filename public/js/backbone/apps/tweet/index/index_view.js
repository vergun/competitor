// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.Competitor.module("TweetApp.Index", function(Index, App, backbone, Marionette, $, _) {
    /* Layout*/

    var _ref, _ref1, _ref2, _ref3, _ref4;
    Index.Layout = (function(_super) {
      __extends(Layout, _super);

      function Layout() {
        _ref = Layout.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Layout.prototype.template = templatizer.tweet.layout;

      Layout.prototype.regions = {
        headerRegion: "#tweets-header-region",
        mainRegion: "#tweets-main-region",
        footerRegion: "#tweets-footer-region"
      };

      return Layout;

    })(App.Views.Layout);
    /* Header*/

    Index.Header = (function(_super) {
      __extends(Header, _super);

      function Header() {
        _ref1 = Header.__super__.constructor.apply(this, arguments);
        return _ref1;
      }

      Header.prototype.template = templatizer.tweet.header;

      Header.prototype.ui = {
        tweetsTotal: "#tweets-total"
      };

      Header.prototype.templateHelpers = {
        tweetsCount: function() {
          var data, total;
          total = 0;
          if (this.chart === "Bar" || this.chart === "Line" || this.chart === "Radar") {
            data = this.chartData.datasets;
          } else {
            data = this.chartData;
          }
          $.each(data, function(index, element) {
            return total = total + element.value;
          });
          return " " + total + " Tweets";
        }
      };

      Header.prototype.modelEvents = {
        "change": "render"
      };

      return Header;

    })(App.Views.ItemView);
    /* Tweets*/

    Index.Tweet = (function(_super) {
      __extends(Tweet, _super);

      function Tweet() {
        _ref2 = Tweet.__super__.constructor.apply(this, arguments);
        return _ref2;
      }

      Tweet.prototype.template = templatizer.tweet.tweets;

      Tweet.prototype.ui = {
        chart: "#myChart"
      };

      Tweet.prototype.templateHelpers = {
        addChart: function() {
          var data;
          if (this.chart === "Bar" || this.chart === "Line" || this.chart === "Radar") {
            return data = this.chartData.datasets;
          } else {
            return data = this.chartData;
          }
        }
      };

      return Tweet;

    })(App.Views.ItemView);
    Index.TweetEmpty = (function(_super) {
      __extends(TweetEmpty, _super);

      function TweetEmpty() {
        _ref3 = TweetEmpty.__super__.constructor.apply(this, arguments);
        return _ref3;
      }

      TweetEmpty.prototype.template = templatizer.tweet.includes._tweets_empty;

      return TweetEmpty;

    })(App.Views.ItemView);
    return Index.Tweets = (function(_super) {
      __extends(Tweets, _super);

      function Tweets() {
        _ref4 = Tweets.__super__.constructor.apply(this, arguments);
        return _ref4;
      }

      Tweets.prototype.template = templatizer.tweet.tweets;

      Tweets.prototype.itemViewContainer = '.tweets-list';

      Tweets.prototype.itemView = Index.Tweet;

      Tweets.prototype.emptyView = Index.TweetEmpty;

      return Tweets;

    })(App.Views.CompositeView);
  });

}).call(this);
