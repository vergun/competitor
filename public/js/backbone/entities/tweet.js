// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.Competitor.module("Entities", function(Entities, App, Backbone, Marionette, $, _) {
    var API, _ref, _ref1;
    Entities.Tweet = (function(_super) {
      __extends(Tweet, _super);

      function Tweet() {
        _ref = Tweet.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      return Tweet;

    })(Entities.Model);
    Entities.TweetCollection = (function(_super) {
      __extends(TweetCollection, _super);

      function TweetCollection() {
        _ref1 = TweetCollection.__super__.constructor.apply(this, arguments);
        return _ref1;
      }

      TweetCollection.prototype.initialize = function(options) {
        console.log(options);
        this.options = options;
        this.urlRoot = "/tweets/chart/";
        this.baseURL = "date=&chart=Pie&keywords=baroque;_hello;_goodbye&since=&context=totals/";
        return this.model = Entities.Tweet;
      };

      TweetCollection.prototype.url = function() {
        if (this.options.length != null) {
          return this.urlRoot + $.params(options);
        } else {
          return this.urlRoot + this.baseURL;
        }
      };

      return TweetCollection;

    })(Entities.Collection);
    API = {
      getTweets: function(options) {
        if (options == null) {
          options = {};
        }
        return new Entities.TweetCollection(options);
      }
    };
    return App.reqres.setHandler("get:index:tweets", function(options) {
      if (options == null) {
        options = {};
      }
      return API.getTweets(options);
    });
  });

}).call(this);
